#!/usr/bin/env node
//
// This is the backend server startup script.
//

// Dependencies
var format = require('string-format');
var debug = require('debug')('a-plataforma');
var http = require('http');

var app = require('../app.js');
var config = require('../config.js');
var pjson = require('../package.json');

// Get port from environment and store in Express.
app.set('port', config.port);

// Create HTTP server.
var server = http.createServer(app);

// Listen on provided port, on all network interfaces.
server.listen(config.port);
server.on('error', onError);
server.on('listening', onListening);

// Event listener for HTTP server "error" event.
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = (typeof port === 'string') ? 'Pipe ' + config.port : 'Port ' + config.port;

    // Handle specific listen errors with friendly messages.
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' precisa de privilégios elevados');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' já está em uso');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

// Event listener for HTTP server "listening" event.
function onListening() {
    var env = app.get('env');
    var addr = server.address();
    var bind = (typeof addr === 'string') ? 'no pipe ' + addr : 'na porta ' + addr.port;
    console.log(format('{0} v{1} : escutando {2} (ambiente {3})...', pjson.name, pjson.version, bind, env));
}
